@use "../util" as *;
@use "./spacer" as *;
@use "sass:list";
@use "sass:map";

@function get-gap(){
    $values: ();

    @for $i from 0 to list.length($spacer){
        $values: map.set($values, #{$i}, var(--gap-x-#{$i}) var(--gap-y-#{$i}))
    }

    @return $values;
}


@function get-gap-coord($key){
    $values: ();
    
    @for $i from 0 to list.length($spacer){
        $values: map.set($values, #{$i}, 
        get-or-others(
            config("gap", $key, #{$i}),
            config("gap", #{$i}),
            list.nth($spacer, $i + 1)
        ));
    }

    @return $values;
}

@include map-properties((
    gap: (
        name: "gap",
        important: get-or-others(config("gap", "important"), true),
        responsive: get-or-others(config("gap", "responsive"), false),
        css: gap,
        var: --gap,
        values: get-gap()
    ),

    gap-x: (
        name: "gap-x",
        important: get-or-others(
            config("gap", "row", "important"),
            config("gap", "important")
            true
        ),
        responsive: get-or-others(
            config("gap", "x", "responsive"),
            config("gap", "responsive"),
            false
        ),
        css: row-gap,
        var: --gap-x,
        values: get-gap-coord("x")
    ),

    column-gap: (
        name: "gap-y",
        important: get-or-others(
            config("gap", "y", "important"),
            config("gap", "important"),
            true
        ),
        responsive: get-or-others(
            config("gap", "y", "responsive"),
            config("gap", "responsive"),
            false
        ),
        css: column-gap,
        var: --gap-y,
        values: get-gap-coord("y")
    ),
));