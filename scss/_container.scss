@use "./rwd" as rwd;
@use "sass:map";
@use "./util" as *;

@mixin -make-container-mixin($selector, $widths){
    @each $key, $point in rwd.$break-points{
        @if $key == "xs"{
            @media (width < #{$point}) {
                .#{$selector}{
                    width: #{map.get($widths, $key)};
                }
            }
        } @else{
            @media (width >= #{$point}) {
                .#{$selector}{
                    width: #{map.get($widths, $key)};
                }
            }
        }
    }
}

@mixin -make-containers($containers){
    @each $name, $widths in $containers{
        @include -make-container-mixin($name, $widths);
    }
}

$-container: "container";
$-xs: get-or-others(config("container", "xs"), 100%);
$-sm: get-or-others(config("container", "sm"), 540px);
$-md: get-or-others(config("container", "md"), 720px);
$-lg: get-or-others(config("container", "lg"), 960px);
$-xlg: get-or-others(config("container", "xlg"), 1140px);
$-xxlg: get-or-others(config("container", "xxlg"), 1320px);

@include -make-containers((
    #{$-container}: (
        xs: $-xs,
        sm: $-sm,
        md: $-md,
        lg: $-lg,
        xlg: $-xlg,
        xxlg: $-xxlg
    ),

    #{$-container}-sm: (
        xs: $-xs,
        sm: $-sm,
        md: $-md,
        lg: $-lg,
        xlg: $-xlg,
        xxlg: $-xxlg
    ),

    #{$-container}-md: (
        xs: $-xs,
        sm: $-xs,
        md: $-md,
        lg: $-lg,
        xlg: $-xlg,
        xxlg: $-xxlg
    ),

    #{$-container}-lg: (
        xs: $-xs,
        sm: $-xs,
        md: $-xs,
        lg: $-lg,
        xlg: $-xlg,
        xxlg: $-xxlg
    ),

    #{$-container}-xlg: (
        xs: $-xs,
        sm: $-xs,
        md: $-xs,
        lg: $-xs,
        xlg: $-xlg,
        xxlg: $-xxlg
    ),

    #{$-container}-xxlg: (
        xs: $-xs,
        sm: $-xs,
        md: $-xs,
        lg: $-xs,
        xlg: $-xs,
        xxlg: $-xxlg
    ),
));